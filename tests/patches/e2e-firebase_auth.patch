diff -x flutterfire_repo -ur flutterfire/firebase_auth_e2e_test.dart dart/firebase_auth_e2e_test.dart
--- flutterfire/firebase_auth_e2e_test.dart	2024-01-01 00:00:00.000000000 +0100
+++ dart/firebase_auth_e2e_test.dart	2024-01-01 00:00:00.000000000 +0100
@@ -1,6 +1,6 @@
-// Copyright 2019, the Chromium project authors.  Please see the AUTHORS file
-// for details. All rights reserved. Use of this source code is governed by a
-// BSD-style license that can be found in the LICENSE file.
+// Copyright 2021 Invertase Limited. All rights reserved.
+// Use of this source code is governed by a BSD-style license
+// that can be found in the LICENSE file.
 
 import 'package:firebase_auth/firebase_auth.dart';
 import 'package:firebase_core/firebase_core.dart';
@@ -19,7 +19,7 @@
   group('firebase_auth', () {
     setUpAll(() async {
       await Firebase.initializeApp(
-        options: DefaultFirebaseOptions.currentPlatform,
+        options: kFirebaseOptions,
       );
 
       await FirebaseAuth.instance
diff -x flutterfire_repo -ur flutterfire/firebase_auth_instance_e2e_test.dart dart/firebase_auth_instance_e2e_test.dart
--- flutterfire/firebase_auth_instance_e2e_test.dart	2024-01-01 00:00:00.000000000 +0100
+++ dart/firebase_auth_instance_e2e_test.dart	2024-01-01 00:00:00.000000000 +0100
@@ -1,7 +1,6 @@
-// Copyright 2020, the Chromium project authors.  Please see the AUTHORS file
-// for details. All rights reserved. Use of this source code is governed by a
-// BSD-style license that can be found in the LICENSE file.
-
+// Copyright 2021 Invertase Limited. All rights reserved.
+// Use of this source code is governed by a BSD-style license
+// that can be found in the LICENSE file.
 import 'dart:async';
 import 'dart:io';
 
@@ -140,7 +139,7 @@
             // Requires a fresh app.
             FirebaseApp second = await Firebase.initializeApp(
               name: 'test-init',
-              options: DefaultFirebaseOptions.currentPlatform,
+              options: kFirebaseOptions,
             );
 
             Stream<User?> stream =
@@ -255,7 +254,7 @@
             }
           });
         },
-        skip: !kIsWeb && Platform.isWindows,
+        skip: !kIsWeb && isFlutterFirePlatform,
       );
 
       group(
@@ -272,7 +271,7 @@
             }
           });
         },
-        skip: !kIsWeb && Platform.isWindows,
+        skip: !kIsWeb && isFlutterFirePlatform,
       );
 
       group(
@@ -440,7 +439,8 @@
             equals(true),
           );
         });
-      });
+        // TODO: Implement isSignInWithEmailLink
+      }, skip: true);
 
       group(
         'sendPasswordResetEmail()',
@@ -521,7 +521,7 @@
             );
           });
         },
-        skip: !kIsWeb && (Platform.isWindows || Platform.isMacOS),
+        skip: !kIsWeb && (isFlutterFirePlatform || Platform.isMacOS),
       );
 
       group('languageCode', () {
@@ -960,7 +960,7 @@
           );
         },
         skip: defaultTargetPlatform == TargetPlatform.macOS ||
-            defaultTargetPlatform == TargetPlatform.windows ||
+            isFlutterFirePlatform ||
             kIsWeb,
       );
 
diff -x flutterfire_repo -ur flutterfire/firebase_auth_user_e2e_test.dart dart/firebase_auth_user_e2e_test.dart
--- flutterfire/firebase_auth_user_e2e_test.dart	2024-01-01 00:00:00.000000000 +0100
+++ dart/firebase_auth_user_e2e_test.dart	2024-01-01 00:00:00.000000000 +0100
@@ -1,6 +1,6 @@
-// Copyright 2020, the Chromium project authors.  Please see the AUTHORS file
-// for details. All rights reserved. Use of this source code is governed by a
-// BSD-style license that can be found in the LICENSE file.
+// Copyright 2021 Invertase Limited. All rights reserved.
+// Use of this source code is governed by a BSD-style license
+// that can be found in the LICENSE file.
 
 import 'dart:async';
 
@@ -251,7 +251,7 @@
             },
             skip: kIsWeb ||
                 defaultTargetPlatform == TargetPlatform.macOS ||
-                defaultTargetPlatform == TargetPlatform.windows,
+                isFlutterFirePlatform,
           ); // verifyPhoneNumber not supported on web.
 
           test(
@@ -720,7 +720,8 @@
               // Assertions
               expect(
                 FirebaseAuth.instance.currentUser!.refreshToken,
-                isNull,
+                // With flutterfire_desktop we return refreshTokens
+                isNotNull,
               );
             },
             // macOS skipped because it needs keychain sharing entitlement. See: https://github.com/firebase/flutterfire/issues/9538
diff -x flutterfire_repo -ur flutterfire/test_utils.dart dart/test_utils.dart
--- flutterfire/test_utils.dart	2024-01-01 00:00:00.000000000 +0100
+++ dart/test_utils.dart	2024-01-01 00:00:00.000000000 +0100
@@ -1,8 +1,9 @@
-// Copyright 2020, the Chromium project authors.  Please see the AUTHORS file
-// for details. All rights reserved. Use of this source code is governed by a
-// BSD-style license that can be found in the LICENSE file.
+// Copyright 2021 Invertase Limited. All rights reserved.
+// Use of this source code is governed by a BSD-style license
+// that can be found in the LICENSE file.
 
 import 'dart:convert';
+import 'dart:io';
 import 'dart:math';
 
 import 'package:collection/collection.dart' show IterableExtension;
@@ -14,7 +15,7 @@
 const String testEmail = 'test@example.com';
 const String testPassword = 'testpassword';
 const String testPhoneNumber = '+447111555666';
-const String _testFirebaseProjectId = 'flutterfire-e2e-tests';
+const String _testFirebaseProjectId = 'react-native-firebase-testing';
 
 // TODO can this be moved to be shared for all plugins that use emulators?
 String get testEmulatorHost {
@@ -251,3 +252,6 @@
 
   return base64Url.encode(values).toLowerCase();
 }
+
+
+bool get isFlutterFirePlatform => Platform.isLinux || Platform.isWindows;
\ No newline at end of file
